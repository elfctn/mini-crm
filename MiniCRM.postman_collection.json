{
  "info": {
    "_postman_id": "mini-crm-api-collection",
    "name": "Mini CRM API",
    "description": "küçük işletmeler için müşteri ve not yönetimi api’si. jwt ile korumalı endpointler içerir.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "kullanıcı kaydı (register)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Elif Çetin\",\n  \"email\": \"admin@minicrm.com\",\n  \"password\": \"admin123\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/auth/register",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "auth", "register"]
        },
        "description": "yeni kullanıcı kaydı oluşturur"
      }
    },
    {
      "name": "kullanıcı girişi (login)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"admin@minicrm.com\",\n  \"password\": \"admin123\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/auth/login",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "auth", "login"]
        },
        "description": "kullanıcı girişi yapar ve jwt token döner"
      }
    },
    {
      "name": "müşteri ekle (create customer)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Ahmet Yılmaz\",\n  \"email\": \"ahmet@firma.com\",\n  \"phone\": \"+905551234567\",\n  \"tags\": [\"potansiyel\", \"b2b\"]\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/customers",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "customers"]
        },
        "description": "yeni müşteri ekler. jwt token gerektirir."
      }
    },
    {
      "name": "müşteri listele (list customers)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": {
          "raw": "http://localhost:3000/api/customers",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "customers"]
        },
        "description": "müşteri listesini döner. jwt token gerektirir."
      }
    },
    {
      "name": "müşteri güncelle (update customer)",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Ahmet Yılmaz\",\n  \"email\": \"ahmet@firma.com\",\n  \"phone\": \"+905551234567\",\n  \"tags\": [\"müşteri\"]\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/customers/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "customers", "1"]
        },
        "description": "müşteri bilgilerini günceller. jwt token gerektirir. id'yi güncel müşteri id'si ile değiştir."
      }
    },
    {
      "name": "müşteri sil (delete customer)",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": {
          "raw": "http://localhost:3000/api/customers/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "customers", "1"]
        },
        "description": "müşteri siler. jwt token gerektirir. id'yi güncel müşteri id'si ile değiştir."
      }
    },
    {
      "name": "not ekle (add note)",
      "request": {
        "method": "POST",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"content\": \"ilk görüşme yapıldı\",\n  \"customerId\": \"1\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/notes",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "notes"]
        },
        "description": "müşteriye not ekler. jwt token gerektirir. customerId'yi güncel müşteri id'si ile değiştir."
      }
    },
    {
      "name": "not listele (list notes)",
      "request": {
        "method": "GET",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": {
          "raw": "http://localhost:3000/api/notes?customerId=1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "notes"],
          "query": [
            { "key": "customerId", "value": "1" }
          ]
        },
        "description": "müşterinin notlarını döner. jwt token gerektirir. customerId'yi güncel müşteri id'si ile değiştir."
      }
    },
    {
      "name": "not güncelle (update note)",
      "request": {
        "method": "PUT",
        "header": [
          { "key": "Content-Type", "value": "application/json" },
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"content\": \"görüşme olumlu geçti\"\n}"
        },
        "url": {
          "raw": "http://localhost:3000/api/notes/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "notes", "1"]
        },
        "description": "notu günceller. jwt token gerektirir. id'yi güncel not id'si ile değiştir."
      }
    },
    {
      "name": "not sil (delete note)",
      "request": {
        "method": "DELETE",
        "header": [
          { "key": "Authorization", "value": "Bearer {{token}}" }
        ],
        "url": {
          "raw": "http://localhost:3000/api/notes/1",
          "protocol": "http",
          "host": ["localhost"],
          "port": "3000",
          "path": ["api", "notes", "1"]
        },
        "description": "notu siler. jwt token gerektirir. id'yi güncel not id'si ile değiştir."
      }
    }
  ]
} 